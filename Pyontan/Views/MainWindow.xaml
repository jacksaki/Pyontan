<mahApps:MetroWindow
    x:Class="Pyontan.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:dlg="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:Pyontan.Views"
    xmlns:vm="clr-namespace:Pyontan.ViewModels"
    dlg:DialogParticipation.Register="{Binding}"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="1"
    FontFamily="pack:application,,,/MaterialDesignThemes.Wpf;conponent/Resources/Roboto/#Roboto"
    GlowBrush="{DynamicResource AccentColorBrush}"
    TextElement.FontSize="22"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    >

    <b:Interaction.Triggers>
        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <b:EventTrigger EventName="Loaded">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </b:EventTrigger>
        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <b:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </b:EventTrigger>
        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->
    </b:Interaction.Triggers>
    <Grid>
        <TabControl  HorizontalContentAlignment="Left">
            <TabItem Header="実行計画">
                <wpf:Card>
                    <v:ExplainBox DataContext="{Binding ExplainBoxViewModel}"/>
                </wpf:Card>
            </TabItem>
            <TabItem Header="設定">
                <wpf:Card>
                    <v:SettingsBox DataContext="{Binding SettingsBoxViewModel}"/>
                </wpf:Card>
            </TabItem>
        </TabControl>
    </Grid>
</mahApps:MetroWindow>
